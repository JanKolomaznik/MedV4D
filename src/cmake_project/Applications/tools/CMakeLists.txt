
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT( MEDV4D_TOOLS )

SET(MEDV4D_CMAKE_SOURCE_DIR "${CMAKE_SOURCE_DIR}/../.." )
SET(MEDV4D_CMAKE_MODULES_DIR ${MEDV4D_CMAKE_SOURCE_DIR}/Modules)
INCLUDE( "${MEDV4D_CMAKE_MODULES_DIR}/ApplicationCMakeListMandatoryInclude.cmake" )




SET(EXECUTABLE_OUTPUT_PATH ${MEDV4D_CMAKE_SOURCE_DIR}/../executables/tools)

SET(TOOLS_SRC_DIR "${MEDV4D_CMAKE_SOURCE_DIR}/../Applications/tools")

ADD_EXECUTABLE(CannyEdgeDetector ${TOOLS_SRC_DIR}/CannyEdgeDetector.cpp)
TARGET_LINK_LIBRARIES(CannyEdgeDetector ${MEDV4D_ALL_LIBRARIES})
#ADD_DEPENDENCIES(CannyEdgeDetector ${MEDV4D_LIB_TARGETS})

ADD_EXECUTABLE(ClampFilter ${TOOLS_SRC_DIR}/ClampFilter.cpp)
TARGET_LINK_LIBRARIES(ClampFilter ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(CreateExampleData ${TOOLS_SRC_DIR}/CreateExampleData.cpp)
TARGET_LINK_LIBRARIES(CreateExampleData ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(DICOM2ImageDump ${TOOLS_SRC_DIR}/DICOM2ImageDump.cpp)
TARGET_LINK_LIBRARIES(DICOM2ImageDump ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(GaussianFilter ${TOOLS_SRC_DIR}/GaussianFilter.cpp)
TARGET_LINK_LIBRARIES(GaussianFilter ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(ImageCrop ${TOOLS_SRC_DIR}/ImageCrop.cpp)
TARGET_LINK_LIBRARIES(ImageCrop ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(ImageDumpView ${TOOLS_SRC_DIR}/ImageDumpView.cpp)
TARGET_LINK_LIBRARIES(ImageDumpView ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(LaplaceOperator ${TOOLS_SRC_DIR}/LaplaceOperator.cpp)
TARGET_LINK_LIBRARIES(LaplaceOperator ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(MaxFilter ${TOOLS_SRC_DIR}/MaxFilter.cpp)
TARGET_LINK_LIBRARIES(MaxFilter ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(MedianFilter ${TOOLS_SRC_DIR}/MedianFilter.cpp)
TARGET_LINK_LIBRARIES(MedianFilter ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(MinFilter ${TOOLS_SRC_DIR}/MinFilter.cpp)
TARGET_LINK_LIBRARIES(MinFilter ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(SaveModelVisualization ${TOOLS_SRC_DIR}/SaveModelVisualization.cpp)
TARGET_LINK_LIBRARIES(SaveModelVisualization ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(SobelEdgeDetector ${TOOLS_SRC_DIR}/SobelEdgeDetector.cpp)
TARGET_LINK_LIBRARIES(SobelEdgeDetector ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(SobelGradientOperator ${TOOLS_SRC_DIR}/SobelGradientOperator.cpp)
TARGET_LINK_LIBRARIES(SobelGradientOperator ${MEDV4D_ALL_LIBRARIES})

ADD_EXECUTABLE(Subtract ${TOOLS_SRC_DIR}/Subtract.cpp)
TARGET_LINK_LIBRARIES(Subtract ${MEDV4D_ALL_LIBRARIES})


IF( DEVIL_FOUND )
	ADD_EXECUTABLE(ImageDump2Picture ${TOOLS_SRC_DIR}/ImageDump2Picture.cpp)
	TARGET_LINK_LIBRARIES(ImageDump2Picture ${MEDV4D_ALL_LIBRARIES} ${DEVIL_LIBRARIES})
ENDIF( DEVIL_FOUND )

FIND_PACKAGE(CUDA)
IF( CUDA_FOUND )
	SET(CUDA_NVCC_FLAGS --compiler-options;-fpermissive;--use_fast_math;-arch=compute_13;-code=compute_13;--use_fast_math )
	INCLUDE_DIRECTORIES( ${CUDA_INCLUDE_DIRS} )

	CUDA_ADD_EXECUTABLE(CudaFilters ${TOOLS_SRC_DIR}/CudaFilters.cpp ${TOOLS_SRC_DIR}/CudaFilters.cu )
	TARGET_LINK_LIBRARIES(CudaFilters ${MEDV4D_ALL_LIBRARIES} ${CUDA_LIBRARIES} )
ENDIF( CUDA_FOUND )

