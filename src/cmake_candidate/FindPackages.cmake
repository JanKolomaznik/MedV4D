FIND_PACKAGE(Boost REQUIRED COMPONENTS filesystem system thread)
FIND_PACKAGE(OpenGL REQUIRED)


IF( ${WIN32} )
	SET( WIN32_USE_PREPARED_PACKAGES TRUE )
ENDIF( ${WIN32} )

IF( WIN32_USE_PREPARED_PACKAGES )
	get_filename_component(QT_MOC_EXECUTABLE ${CMAKE_SOURCE_DIR}/../bin/qt/moc.exe ABSOLUTE)
	get_filename_component(QT_UIC_EXECUTABLE ${CMAKE_SOURCE_DIR}/../bin/qt/uic.exe ABSOLUTE)
	get_filename_component(QT_RCC_EXECUTABLE ${CMAKE_SOURCE_DIR}/../bin/qt/rcc.exe ABSOLUTE)
	get_filename_component(QT_QMAKE_EXECUTABLE ${CMAKE_SOURCE_DIR}/../bin/qt/qmake.exe ABSOLUTE)
	SET(QT_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/../include/qt/headers")
	SET(QT_QT_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/../include/qt/headers")
	SET(QT_QTCORE_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/../include/qt/headers/QtCore")
	SET(QT_QTGUI_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/../include/qt/headers/QtGui")
	SET(QT_QTOPENGL_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/../include/qt/headers/QtOpenGL")
	FILE( GLOB QT_LIBRARIES ../lib/qt/* )
		
	FIND_PACKAGE(Qt4 REQUIRED)

	SET(VTK_LIBRARY_DIRS "${CMAKE_SOURCE_DIR}/../lib/vtk")
	SET(VTK_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/../include/vtk")

	SET(DCMTK_LIBRARY_DIRS "${CMAKE_SOURCE_DIR}/../lib/dcmtkLibs")
	SET(DCMTK_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/../include/dcmtk")

	SET( DCMTK_OPTIONS "" )
ELSE( WIN32_USE_PREPARED_PACKAGES )

	FIND_PACKAGE(Qt4 REQUIRED)
	FIND_PACKAGE(VTK REQUIRED)
	FIND_PACKAGE(DCMTK REQUIRED)
	SET( DCMTK_OPTIONS "HAVE_CONFIG_H" )
ENDIF( WIN32_USE_PREPARED_PACKAGES )

SET(QT_USE_QTOPENGL 1)

INCLUDE(${QT_USE_FILE})

SET(DCMTK_LIBRARIES dcmnet dcmdata ofstd)

SET(VTK_LIBRARIES vtkCommon vtkDICOMParser vtkexoIIc vtkFiltering vtkftgl vtkGenericFiltering vtkGraphics vtkHybrid vtkImaging vtkIO vtkNetCDF vtksys vtkVolumeRendering vtkWidgets QVTK vtkRendering)

IF(UNIX)
	SET(ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES} wrap)
ENDIF(UNIX)

SET( LIB_DIRS_3RD_PARTY ${VTK_LIBRARY_DIRS} ${DCMTK_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS} ${QT_LIBRARY_DIRS} )
SET( LIBRARIES_3RD_PARTY ${VTK_LIBRARIES} ${DCMTK_LIBRARIES} ${Boost_LIBRARIES} ${QT_LIBRARIES} ${ADDITIONAL_LIBRARIES} ${OPENGL_LIBRARY} )
SET( INCLUDE_DIRS_3RD_PARTY ${VTK_INCLUDE_DIRS} ${DCMTK_INCLUDE_DIR} ${Boost_INCLUDE_DIRS} ${QT_INCLUDES} )

SET( MEDV4D_LIB_DIRS ${LIBRARY_OUTPUT_PATH} )
SET( MEDV4D_LIBRARIES m4dWidgets vtkIntegration backendForDICOM Imaging Common)
SET( MEDV4D_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/.. ${CMAKE_SOURCE_DIR}/../include )

SET( MEDV4D_ALL_LIB_DIRS  ${LIB_DIRS_3RD_PARTY} ${MEDV4D_LIB_DIRS} )
SET( MEDV4D_ALL_LIBRARIES ${LIBRARIES_3RD_PARTY} ${MEDV4D_LIBRARIES} )
SET( MEDV4D_ALL_INCLUDE_DIRS ${INCLUDE_DIRS_3RD_PARTY} ${MEDV4D_INCLUDE_DIRS} )

INCLUDE_DIRECTORIES( ${MEDV4D_ALL_INCLUDE_DIRS} )

