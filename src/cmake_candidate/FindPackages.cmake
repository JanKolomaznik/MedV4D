
set(Boost_USE_STATIC_LIBS   ON)
set(Boost_USE_MULTITHREADED ON)
FIND_PACKAGE(Boost REQUIRED COMPONENTS filesystem system thread)
FIND_PACKAGE(OpenGL REQUIRED)

INCLUDE( "FindQt4ForM4D.cmake" )
INCLUDE( "FindVTKForM4D.cmake" )
INCLUDE( "FindDCMTKForM4D.cmake" )


message( "Temporary solution - arguments" )
IF(WIN32)
  SET(CMAKE_CXX_FLAGS_DEBUG "/MTd /ZI /Od -DDEBUG_LEVEL=10 -DDEBUG_ADITIONAL_INFO")
  SET(CMAKE_CXX_FLAGS_RELEASE "/MT")
ELSE(WIN32)
  SET(CMAKE_CXX_FLAGS "-ggdb -Wall -Wno-deprecated -DDCOMPAT_H -DHAVE_CONFIG_H -DHAVE_SSTREAM -DDEBUG_LEVEL=10 -DDEBUG_ADITIONAL_INFO")
ENDIF(WIN32) 


IF(UNIX)
	SET(ADDITIONAL_LIBRARIES ${ADDITIONAL_LIBRARIES} wrap)
ENDIF(UNIX)

SET( LIB_DIRS_3RD_PARTY ${VTK_LIBRARY_DIRS} ${DCMTK_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS} ${QT_LIBRARY_DIR} )
SET( LIBRARIES_3RD_PARTY ${VTK_LIBRARIES} ${DCMTK_LIBRARIES} ${Boost_LIBRARIES} ${QT_LIBRARIES} ${ADDITIONAL_LIBRARIES} ${OPENGL_LIBRARY} )
SET( INCLUDE_DIRS_3RD_PARTY ${VTK_INCLUDE_DIRS} ${DCMTK_INCLUDE_DIR} ${Boost_INCLUDE_DIRS} ${QT_INCLUDES} )

SET( MEDV4D_LIB_DIRS ${LIBRARY_OUTPUT_PATH} )
SET( MEDV4D_LIBRARIES m4dWidgets vtkIntegration backendForDICOM Imaging Common)
SET( MEDV4D_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/.. ${CMAKE_SOURCE_DIR}/../include )

IF( WIN32 )
	#APPEND_STRING_TO_LIST_MEMBERS( "d" DCMTK_LIBRARIES DCMTK_LIBRARIES_DEBUG )
	#APPEND_STRING_TO_LIST_MEMBERS( "d" VTK_LIBRARIES VTK_LIBRARIES_DEBUG )
	#message("${QT_LIBRARIES_DEBUG}")
ENDIF( WIN32 )

SET( MEDV4D_ALL_LIB_DIRS  ${LIB_DIRS_3RD_PARTY} ${MEDV4D_LIB_DIRS} )
SET( MEDV4D_ALL_LIBRARIES ${LIBRARIES_3RD_PARTY} ${MEDV4D_LIBRARIES} )
SET( MEDV4D_ALL_INCLUDE_DIRS ${INCLUDE_DIRS_3RD_PARTY} ${MEDV4D_INCLUDE_DIRS} )

INCLUDE_DIRECTORIES( ${MEDV4D_ALL_INCLUDE_DIRS} )
LINK_DIRECTORIES( ${MEDV4D_ALL_LIB_DIRS} )
