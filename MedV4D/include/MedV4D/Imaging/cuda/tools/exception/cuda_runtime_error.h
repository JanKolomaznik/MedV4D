/*
 * Copyright: See LICENSE file that comes with this distribution
 *
 */

#ifndef CUPP_cuda_runtime_error_H
#define CUPP_cuda_runtime_error_H


#if defined(__CUDACC__)
#error "Not compatible with CUDA. Don't compile with nvcc."
#endif


#include "cupp/exception/exception.h"

#include <cuda_runtime.h>

namespace cupp {
namespace exception {

/**
 * @class cuda_runtime_error
 * @author Jens Breitbart
 * @version 0.1
 * @date 13.06.2007
 * @brief This exception is thrown when an low-level CUDA error occurs, eg. an internal call to cudaMalloc fails.
 *
 * The returned error string is a default CUDA error string.
 */
class cuda_runtime_error : public exception {
	private:
		// the error
		cudaError_t error_;
	public:
		/**
		 * @brief Generates an exception with the error number @a error
		 * @param error The error number generated by CUDA
		 */
		cuda_runtime_error(cudaError_t error): error_(error) {}
		char const* what() const throw() {
			return cudaGetErrorString(error_);
		}
};

}
}

#endif
